<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="5" total="34" passed="27" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-03T13:18:12Z" name="Test Automation University Suite" finished-at="2019-12-03T13:19:14Z" duration-ms="62369">
    <groups>
      <group name="broken">
        <method signature="NavigationTests.testNavigator()[pri:0, instance:navigation.NavigationTests@36361ddb]" name="testNavigator" class="navigation.NavigationTests"/>
      </group> <!-- broken -->
      <group name="checkintest">
        <method signature="NavigationTests.testNavigator()[pri:0, instance:navigation.NavigationTests@36361ddb]" name="testNavigator" class="navigation.NavigationTests"/>
        <method signature="NavigationTests.testSwitchTab()[pri:0, instance:navigation.NavigationTests@36361ddb]" name="testSwitchTab" class="navigation.NavigationTests"/>
      </group> <!-- checkintest -->
      <group name="functest">
        <method signature="NavigationTests.testSwitchTab()[pri:0, instance:navigation.NavigationTests@36361ddb]" name="testSwitchTab" class="navigation.NavigationTests"/>
      </group> <!-- functest -->
    </groups>
    <test started-at="2019-12-03T13:18:12Z" name="Cookies Test" finished-at="2019-12-03T13:18:21Z" duration-ms="9460">
      <class name="Cookies.CookiesTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:12Z" name="setUp" finished-at="2019-12-03T15:18:20Z" duration-ms="7594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:20Z" name="goHome" finished-at="2019-12-03T15:18:20Z" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDeleteCookie()[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:20Z" name="testDeleteCookie" finished-at="2019-12-03T15:18:20Z" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCookie -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:20Z" name="recordFailure" finished-at="2019-12-03T15:18:20Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteCookie status=SUCCESS method=CookiesTests.testDeleteCookie()[pri:0, instance:Cookies.CookiesTests@681e144] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:20Z" name="takeScreenshot" finished-at="2019-12-03T15:18:21Z" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Cookies.CookiesTests@681e144]" started-at="2019-12-03T15:18:21Z" name="tearDown" finished-at="2019-12-03T15:18:21Z" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Cookies.CookiesTests -->
    </test> <!-- Cookies Test -->
    <test started-at="2019-12-03T13:18:12Z" name="DropDown Test" finished-at="2019-12-03T13:18:22Z" duration-ms="9947">
      <class name="dropdown.DropdownTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:12Z" name="setUp" finished-at="2019-12-03T15:18:20Z" duration-ms="7807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:20Z" name="goHome" finished-at="2019-12-03T15:18:20Z" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSelectOption()[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:20Z" name="testSelectOption" finished-at="2019-12-03T15:18:21Z" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectOption -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:21Z" name="recordFailure" finished-at="2019-12-03T15:18:21Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectOption status=SUCCESS method=DropdownTests.testSelectOption()[pri:0, instance:dropdown.DropdownTests@7f92b990] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:21Z" name="takeScreenshot" finished-at="2019-12-03T15:18:21Z" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:dropdown.DropdownTests@7f92b990]" started-at="2019-12-03T15:18:21Z" name="tearDown" finished-at="2019-12-03T15:18:22Z" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- dropdown.DropdownTests -->
    </test> <!-- DropDown Test -->
    <test started-at="2019-12-03T13:18:12Z" name="ContextMenu Test" finished-at="2019-12-03T13:18:22Z" duration-ms="9917">
      <class name="contextMenu.ContextTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:12Z" name="setUp" finished-at="2019-12-03T15:18:19Z" duration-ms="7270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:19Z" name="goHome" finished-at="2019-12-03T15:18:20Z" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testRightClick()[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:20Z" name="testRightClick" finished-at="2019-12-03T15:18:21Z" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightClick -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:21Z" name="recordFailure" finished-at="2019-12-03T15:18:21Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRightClick status=SUCCESS method=ContextTests.testRightClick()[pri:0, instance:contextMenu.ContextTests@1de6932a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:21Z" name="takeScreenshot" finished-at="2019-12-03T15:18:21Z" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:contextMenu.ContextTests@1de6932a]" started-at="2019-12-03T15:18:21Z" name="tearDown" finished-at="2019-12-03T15:18:22Z" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- contextMenu.ContextTests -->
    </test> <!-- ContextMenu Test -->
    <test started-at="2019-12-03T13:18:12Z" name="FrogotPassword Test" finished-at="2019-12-03T13:18:22Z" duration-ms="10354">
      <class name="forgotPassword.forgotPasswordTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:12Z" name="setUp" finished-at="2019-12-03T15:18:19Z" duration-ms="7267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:19Z" name="goHome" finished-at="2019-12-03T15:18:20Z" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSendingEmail()[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:20Z" name="testSendingEmail" finished-at="2019-12-03T15:18:21Z" duration-ms="1718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendingEmail -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:21Z" name="recordFailure" finished-at="2019-12-03T15:18:21Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSendingEmail status=SUCCESS method=forgotPasswordTests.testSendingEmail()[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:21Z" name="takeScreenshot" finished-at="2019-12-03T15:18:22Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:forgotPassword.forgotPasswordTests@39651a82]" started-at="2019-12-03T15:18:22Z" name="tearDown" finished-at="2019-12-03T15:18:22Z" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- forgotPassword.forgotPasswordTests -->
    </test> <!-- FrogotPassword Test -->
    <test started-at="2019-12-03T13:18:12Z" name="Alerts Test" finished-at="2019-12-03T13:18:24Z" duration-ms="11737">
      <class name="AlertsPage.AlertsTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:12Z" name="setUp" finished-at="2019-12-03T15:18:20Z" duration-ms="7642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:20Z" name="goHome" finished-at="2019-12-03T15:18:20Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="JSAlertTest()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:20Z" name="JSAlertTest" finished-at="2019-12-03T15:18:21Z" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JSAlertTest -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:21Z" name="recordFailure" finished-at="2019-12-03T15:18:21Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JSAlertTest status=SUCCESS method=AlertsTests.JSAlertTest()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:21Z" name="takeScreenshot" finished-at="2019-12-03T15:18:21Z" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:21Z" name="goHome" finished-at="2019-12-03T15:18:21Z" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="JSConfirmAlert()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:21Z" name="JSConfirmAlert" finished-at="2019-12-03T15:18:22Z" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JSConfirmAlert -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:22Z" name="recordFailure" finished-at="2019-12-03T15:18:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JSConfirmAlert status=SUCCESS method=AlertsTests.JSConfirmAlert()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:22Z" name="takeScreenshot" finished-at="2019-12-03T15:18:22Z" duration-ms="323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:22Z" name="goHome" finished-at="2019-12-03T15:18:22Z" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSetInputInAlert()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:22Z" name="testSetInputInAlert" finished-at="2019-12-03T15:18:23Z" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetInputInAlert -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:23Z" name="recordFailure" finished-at="2019-12-03T15:18:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetInputInAlert status=SUCCESS method=AlertsTests.testSetInputInAlert()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:23Z" name="takeScreenshot" finished-at="2019-12-03T15:18:23Z" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AlertsPage.AlertsTests@3cd206b5]" started-at="2019-12-03T15:18:23Z" name="tearDown" finished-at="2019-12-03T15:18:24Z" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AlertsPage.AlertsTests -->
    </test> <!-- Alerts Test -->
    <test started-at="2019-12-03T13:18:22Z" name="Hovers Test" finished-at="2019-12-03T13:18:30Z" duration-ms="7834">
      <class name="hover.HoverTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:22Z" name="setUp" finished-at="2019-12-03T15:18:28Z" duration-ms="5834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:28Z" name="goHome" finished-at="2019-12-03T15:18:28Z" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser1()[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:28Z" name="testHoverUser1" finished-at="2019-12-03T15:18:29Z" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser1 -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:29Z" name="recordFailure" finished-at="2019-12-03T15:18:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser1 status=SUCCESS method=HoverTests.testHoverUser1()[pri:0, instance:hover.HoverTests@64a9d48c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:29Z" name="takeScreenshot" finished-at="2019-12-03T15:18:29Z" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:hover.HoverTests@64a9d48c]" started-at="2019-12-03T15:18:29Z" name="tearDown" finished-at="2019-12-03T15:18:30Z" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- hover.HoverTests -->
    </test> <!-- Hovers Test -->
    <test started-at="2019-12-03T13:18:24Z" name="Login Test" finished-at="2019-12-03T13:18:33Z" duration-ms="9110">
      <class name="login.LoginTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:24Z" name="setUp" finished-at="2019-12-03T15:18:29Z" duration-ms="4847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:29Z" name="goHome" finished-at="2019-12-03T15:18:29Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:29Z" name="testSuccessfulLogin" data-provider="logInData" finished-at="2019-12-03T15:18:30Z" duration-ms="1282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tomsmith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SuperSecretPassword!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:30Z" name="recordFailure" finished-at="2019-12-03T15:18:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTests.testSuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@19058533] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:30Z" name="takeScreenshot" finished-at="2019-12-03T15:18:30Z" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:30Z" name="goHome" finished-at="2019-12-03T15:18:31Z" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:31Z" name="testSuccessfulLogin" data-provider="logInData" finished-at="2019-12-03T15:18:32Z" duration-ms="1080" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SuperSecretPassword!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Alert text is incorrect! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Alert text is incorrect! expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at login.LoginTests.testSuccessfulLogin(LoginTests.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:32Z" name="recordFailure" finished-at="2019-12-03T15:18:32Z" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=FAILURE method=LoginTests.testSuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@19058533] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:32Z" name="takeScreenshot" finished-at="2019-12-03T15:18:32Z" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@19058533]" started-at="2019-12-03T15:18:32Z" name="tearDown" finished-at="2019-12-03T15:18:33Z" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- login.LoginTests -->
    </test> <!-- Login Test -->
    <test started-at="2019-12-03T13:18:22Z" name="JS Test" finished-at="2019-12-03T13:18:36Z" duration-ms="13678">
      <class name="javaScript.JavaScriptTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:22Z" name="setUp" finished-at="2019-12-03T15:18:28Z" duration-ms="5804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:28Z" name="goHome" finished-at="2019-12-03T15:18:28Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToTable()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:28Z" name="testScrollToTable" finished-at="2019-12-03T15:18:29Z" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToTable -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:29Z" name="recordFailure" finished-at="2019-12-03T15:18:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToTable status=SUCCESS method=JavaScriptTests.testScrollToTable()[pri:0, instance:javaScript.JavaScriptTests@65eabaab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:29Z" name="takeScreenshot" finished-at="2019-12-03T15:18:29Z" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:29Z" name="goHome" finished-at="2019-12-03T15:18:30Z" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDomain()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:30Z" name="testDomain" finished-at="2019-12-03T15:18:30Z" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDomain -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:30Z" name="recordFailure" finished-at="2019-12-03T15:18:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDomain status=SUCCESS method=JavaScriptTests.testDomain()[pri:0, instance:javaScript.JavaScriptTests@65eabaab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:30Z" name="takeScreenshot" finished-at="2019-12-03T15:18:30Z" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:30Z" name="goHome" finished-at="2019-12-03T15:18:31Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToButtom()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:31Z" name="testScrollToButtom" finished-at="2019-12-03T15:18:32Z" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToButtom -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:32Z" name="recordFailure" finished-at="2019-12-03T15:18:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToButtom status=SUCCESS method=JavaScriptTests.testScrollToButtom()[pri:0, instance:javaScript.JavaScriptTests@65eabaab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:32Z" name="takeScreenshot" finished-at="2019-12-03T15:18:32Z" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:32Z" name="goHome" finished-at="2019-12-03T15:18:32Z" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToFifthParagraph()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:32Z" name="testScrollToFifthParagraph" finished-at="2019-12-03T15:18:33Z" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToFifthParagraph -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:33Z" name="recordFailure" finished-at="2019-12-03T15:18:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToFifthParagraph status=SUCCESS method=JavaScriptTests.testScrollToFifthParagraph()[pri:0, instance:javaScript.JavaScriptTests@65eabaab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:33Z" name="takeScreenshot" finished-at="2019-12-03T15:18:34Z" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:34Z" name="goHome" finished-at="2019-12-03T15:18:34Z" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSelectOption()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:34Z" name="testSelectOption" finished-at="2019-12-03T15:18:35Z" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectOption -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:35Z" name="recordFailure" finished-at="2019-12-03T15:18:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectOption status=SUCCESS method=JavaScriptTests.testSelectOption()[pri:0, instance:javaScript.JavaScriptTests@65eabaab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:35Z" name="takeScreenshot" finished-at="2019-12-03T15:18:35Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:javaScript.JavaScriptTests@65eabaab]" started-at="2019-12-03T15:18:35Z" name="tearDown" finished-at="2019-12-03T15:18:36Z" duration-ms="601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- javaScript.JavaScriptTests -->
    </test> <!-- JS Test -->
    <test started-at="2019-12-03T13:18:30Z" name="LoginParameters Test" finished-at="2019-12-03T13:18:38Z" duration-ms="7780">
      <class name="login.LoginTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:30Z" name="setUp" finished-at="2019-12-03T15:18:35Z" duration-ms="5368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:35Z" name="goHome" finished-at="2019-12-03T15:18:35Z" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin3Parameters(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:35Z" name="testSuccessfulLogin3Parameters" finished-at="2019-12-03T15:18:37Z" duration-ms="1251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tomsmith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SuperSecretPassword!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin3Parameters -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:37Z" name="recordFailure" finished-at="2019-12-03T15:18:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin3Parameters status=SUCCESS method=LoginTests.testSuccessfulLogin3Parameters(java.lang.String, java.lang.String)[pri:0, instance:login.LoginTests@dab48d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:37Z" name="takeScreenshot" finished-at="2019-12-03T15:18:37Z" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@dab48d3]" started-at="2019-12-03T15:18:37Z" name="tearDown" finished-at="2019-12-03T15:18:38Z" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- login.LoginTests -->
    </test> <!-- LoginParameters Test -->
    <test started-at="2019-12-03T13:18:21Z" name="Frames Test" finished-at="2019-12-03T13:18:38Z" duration-ms="16522">
      <class name="Frames.NestedFramesTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:29Z" name="setUp" finished-at="2019-12-03T15:18:36Z" duration-ms="6267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:36Z" name="goHome" finished-at="2019-12-03T15:18:36Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="BottomFrameTest()[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:36Z" name="BottomFrameTest" finished-at="2019-12-03T15:18:37Z" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BottomFrameTest -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:37Z" name="recordFailure" finished-at="2019-12-03T15:18:37Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BottomFrameTest status=SUCCESS method=NestedFramesTests.BottomFrameTest()[pri:0, instance:Frames.NestedFramesTests@63716833] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:37Z" name="takeScreenshot" finished-at="2019-12-03T15:18:37Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Frames.NestedFramesTests@63716833]" started-at="2019-12-03T15:18:37Z" name="tearDown" finished-at="2019-12-03T15:18:38Z" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Frames.NestedFramesTests -->
      <class name="Frames.FramesTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:21Z" name="setUp" finished-at="2019-12-03T15:18:27Z" duration-ms="5601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:27Z" name="goHome" finished-at="2019-12-03T15:18:27Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="ParagraphTest()[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:27Z" name="ParagraphTest" finished-at="2019-12-03T15:18:29Z" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ParagraphTest -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:29Z" name="recordFailure" finished-at="2019-12-03T15:18:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ParagraphTest status=SUCCESS method=FramesTests.ParagraphTest()[pri:0, instance:Frames.FramesTests@54d901aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:29Z" name="takeScreenshot" finished-at="2019-12-03T15:18:29Z" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Frames.FramesTests@54d901aa]" started-at="2019-12-03T15:18:29Z" name="tearDown" finished-at="2019-12-03T15:18:29Z" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Frames.FramesTests -->
    </test> <!-- Frames Test -->
    <test started-at="2019-12-03T13:18:22Z" name="Keys Test" finished-at="2019-12-03T13:18:38Z" duration-ms="15980">
      <class name="keys.MultiplyWindows">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:30Z" name="setUp" finished-at="2019-12-03T15:18:36Z" duration-ms="5399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:36Z" name="goHome" finished-at="2019-12-03T15:18:36Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="FactExampleTests()[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:36Z" name="FactExampleTests" finished-at="2019-12-03T15:18:37Z" duration-ms="1567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FactExampleTests -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:37Z" name="recordFailure" finished-at="2019-12-03T15:18:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FactExampleTests status=SUCCESS method=MultiplyWindows.FactExampleTests()[pri:0, instance:keys.MultiplyWindows@30669dac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:37Z" name="takeScreenshot" finished-at="2019-12-03T15:18:38Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:keys.MultiplyWindows@30669dac]" started-at="2019-12-03T15:18:38Z" name="tearDown" finished-at="2019-12-03T15:18:38Z" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- keys.MultiplyWindows -->
      <class name="keys.KeysTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:22Z" name="setUp" finished-at="2019-12-03T15:18:28Z" duration-ms="5439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:28Z" name="goHome" finished-at="2019-12-03T15:18:28Z" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBackSpace()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:28Z" name="testBackSpace" finished-at="2019-12-03T15:18:29Z" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackSpace -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="recordFailure" finished-at="2019-12-03T15:18:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBackSpace status=SUCCESS method=KeysTests.testBackSpace()[pri:0, instance:keys.KeysTests@422b8438] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="takeScreenshot" finished-at="2019-12-03T15:18:29Z" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="goHome" finished-at="2019-12-03T15:18:29Z" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testPi()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="testPi" finished-at="2019-12-03T15:18:29Z" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPi -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="recordFailure" finished-at="2019-12-03T15:18:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPi status=SUCCESS method=KeysTests.testPi()[pri:0, instance:keys.KeysTests@422b8438] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:29Z" name="takeScreenshot" finished-at="2019-12-03T15:18:30Z" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:keys.KeysTests@422b8438]" started-at="2019-12-03T15:18:30Z" name="tearDown" finished-at="2019-12-03T15:18:30Z" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- keys.KeysTests -->
    </test> <!-- Keys Test -->
    <test started-at="2019-12-03T13:18:33Z" name="Modal Test" finished-at="2019-12-03T13:18:42Z" duration-ms="9023">
      <class name="ModalWindow.ModalTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:33Z" name="setUp" finished-at="2019-12-03T15:18:38Z" duration-ms="4848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:38Z" name="goHome" finished-at="2019-12-03T15:18:38Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="closeTestModal()[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:38Z" name="closeTestModal" finished-at="2019-12-03T15:18:41Z" duration-ms="2891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeTestModal -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:41Z" name="recordFailure" finished-at="2019-12-03T15:18:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=closeTestModal status=SUCCESS method=ModalTests.closeTestModal()[pri:0, instance:ModalWindow.ModalTests@76f856a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:41Z" name="takeScreenshot" finished-at="2019-12-03T15:18:41Z" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ModalWindow.ModalTests@76f856a8]" started-at="2019-12-03T15:18:41Z" name="tearDown" finished-at="2019-12-03T15:18:42Z" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ModalWindow.ModalTests -->
    </test> <!-- Modal Test -->
    <test started-at="2019-12-03T13:18:38Z" name="Slider Test" finished-at="2019-12-03T13:18:46Z" duration-ms="8324">
      <class name="Slider.sliderTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:38Z" name="setUp" finished-at="2019-12-03T15:18:44Z" duration-ms="6232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:44Z" name="goHome" finished-at="2019-12-03T15:18:44Z" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="setSliderNumberFour()[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:44Z" name="setSliderNumberFour" finished-at="2019-12-03T15:18:45Z" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSliderNumberFour -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:45Z" name="recordFailure" finished-at="2019-12-03T15:18:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setSliderNumberFour status=SUCCESS method=sliderTests.setSliderNumberFour()[pri:0, instance:Slider.sliderTests@7e736350] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:45Z" name="takeScreenshot" finished-at="2019-12-03T15:18:45Z" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Slider.sliderTests@7e736350]" started-at="2019-12-03T15:18:45Z" name="tearDown" finished-at="2019-12-03T15:18:46Z" duration-ms="572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Slider.sliderTests -->
    </test> <!-- Slider Test -->
    <test started-at="2019-12-03T13:18:38Z" name="Upload Test" finished-at="2019-12-03T13:18:46Z" duration-ms="8033">
      <class name="UploadFile.UploadFileTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:38Z" name="setUp" finished-at="2019-12-03T15:18:44Z" duration-ms="6043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:44Z" name="goHome" finished-at="2019-12-03T15:18:44Z" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testFileUpload()[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:44Z" name="testFileUpload" finished-at="2019-12-03T15:18:45Z" duration-ms="881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileUpload -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:45Z" name="recordFailure" finished-at="2019-12-03T15:18:45Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFileUpload status=SUCCESS method=UploadFileTests.testFileUpload()[pri:0, instance:UploadFile.UploadFileTests@1816e24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:45Z" name="takeScreenshot" finished-at="2019-12-03T15:18:45Z" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:UploadFile.UploadFileTests@1816e24a]" started-at="2019-12-03T15:18:45Z" name="tearDown" finished-at="2019-12-03T15:18:46Z" duration-ms="601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- UploadFile.UploadFileTests -->
    </test> <!-- Upload Test -->
    <test started-at="2019-12-03T13:18:36Z" name="Navigation Test" finished-at="2019-12-03T13:18:47Z" duration-ms="10913">
      <class name="navigation.NavigationTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:36Z" name="setUp" finished-at="2019-12-03T15:18:41Z" duration-ms="5189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:41Z" name="goHome" finished-at="2019-12-03T15:18:41Z" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testNavigator()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:41Z" name="testNavigator" description="Test" finished-at="2019-12-03T15:18:43Z" duration-ms="1977" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	The Welcome Link Is Not Correct On The Home Page expected [false] but found [true],
	The Dashboard Is Not Correct On The Home Page expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	The Welcome Link Is Not Correct On The Home Page expected [false] but found [true],
	The Dashboard Is Not Correct On The Home Page expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at navigation.NavigationTests.testNavigator(NavigationTests.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigator -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:43Z" name="recordFailure" finished-at="2019-12-03T15:18:43Z" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigator status=FAILURE method=NavigationTests.testNavigator()[pri:0, instance:navigation.NavigationTests@36361ddb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:43Z" name="takeScreenshot" finished-at="2019-12-03T15:18:44Z" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:44Z" name="goHome" finished-at="2019-12-03T15:18:44Z" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSwitchTab()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:44Z" name="testSwitchTab" finished-at="2019-12-03T15:18:46Z" duration-ms="1708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchTab -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:46Z" name="recordFailure" finished-at="2019-12-03T15:18:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchTab status=SUCCESS method=NavigationTests.testSwitchTab()[pri:0, instance:navigation.NavigationTests@36361ddb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:46Z" name="takeScreenshot" finished-at="2019-12-03T15:18:46Z" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:navigation.NavigationTests@36361ddb]" started-at="2019-12-03T15:18:46Z" name="tearDown" finished-at="2019-12-03T15:18:47Z" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- navigation.NavigationTests -->
    </test> <!-- Navigation Test -->
    <test started-at="2019-12-03T13:18:38Z" name="Wait Test" finished-at="2019-12-03T13:19:14Z" duration-ms="36013">
      <class name="Wait.FluentWait">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:38Z" name="setUp" finished-at="2019-12-03T15:18:44Z" duration-ms="5566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:44Z" name="goHome" finished-at="2019-12-03T15:18:44Z" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWaitUntilHidden()[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:44Z" name="testWaitUntilHidden" finished-at="2019-12-03T15:18:50Z" duration-ms="6060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitUntilHidden -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:50Z" name="recordFailure" finished-at="2019-12-03T15:18:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitUntilHidden status=SUCCESS method=FluentWait.testWaitUntilHidden()[pri:0, instance:Wait.FluentWait@43a51d00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:50Z" name="takeScreenshot" finished-at="2019-12-03T15:18:50Z" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Wait.FluentWait@43a51d00]" started-at="2019-12-03T15:18:50Z" name="tearDown" finished-at="2019-12-03T15:18:51Z" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Wait.FluentWait -->
      <class name="Wait.WaitFactExercise">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:18:51Z" name="setUp" finished-at="2019-12-03T15:18:56Z" duration-ms="4616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:18:56Z" name="goHome" finished-at="2019-12-03T15:18:56Z" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="FactTest()[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:18:56Z" name="FactTest" finished-at="2019-12-03T15:19:02Z" duration-ms="5753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FactTest -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:19:02Z" name="recordFailure" finished-at="2019-12-03T15:19:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FactTest status=SUCCESS method=WaitFactExercise.FactTest()[pri:0, instance:Wait.WaitFactExercise@2e23c180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:19:02Z" name="takeScreenshot" finished-at="2019-12-03T15:19:02Z" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Wait.WaitFactExercise@2e23c180]" started-at="2019-12-03T15:19:02Z" name="tearDown" finished-at="2019-12-03T15:19:02Z" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Wait.WaitFactExercise -->
      <class name="Wait.WaitTests">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:02Z" name="setUp" finished-at="2019-12-03T15:19:07Z" duration-ms="4720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:07Z" name="goHome" finished-at="2019-12-03T15:19:07Z" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWaitUntilHidden()[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:07Z" name="testWaitUntilHidden" finished-at="2019-12-03T15:19:13Z" duration-ms="6145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitUntilHidden -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:13Z" name="recordFailure" finished-at="2019-12-03T15:19:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitUntilHidden status=SUCCESS method=WaitTests.testWaitUntilHidden()[pri:0, instance:Wait.WaitTests@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="takeScreenshot()[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:13Z" name="takeScreenshot" finished-at="2019-12-03T15:19:14Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Wait.WaitTests@499683c4]" started-at="2019-12-03T15:19:14Z" name="tearDown" finished-at="2019-12-03T15:19:14Z" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Wait.WaitTests -->
    </test> <!-- Wait Test -->
  </suite> <!-- Test Automation University Suite -->
</testng-results>
